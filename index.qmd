---
title: "Himalayas Project"
authors: "Noah Hutabarat and Harshini Ranjit" 
affiliation: "University of Colorado Denver"
format:
  html:
    theme: lux 
    # see more themes https://quarto.org/docs/output-formats/html-themes.html
page-layout: article
editor: visual
title-block-banner: true
toc: true
---

# Introduction

1.1 Provide an introduction that explains the problem statement you are addressing. Why should I be interested in this?

The dataset we are analyzing is

1.2 Provide a short explanation of how you plan to address this problem statement (the data used and the methodology employed)

1.3 Discuss your current proposed approach/analytic technique you think will address (fully or partially) this problem.

1.4 Explain how your analysis will help the consumer of your analysis

# Packages required

```{r}
library(ggplot2)  # visualization of data through graphs 
library(tidyverse)  # i forgot
library(janitor)  # tidy names
library(plotly)  # interactive plots
```

# Data preparation

```{r}
exped_tidy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-21/exped_tidy.csv')
peaks_tidy <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2025/2025-01-21/peaks_tidy.csv')
```

3.1 Original source where the data was obtained is cited and, if possible, hyperlinked.

The data used for this project was obtained through a github repo - the original dataset is from the [Himalayan Database](https://www.himalayandatabase.com/index.html). This database covers data from expedition archives of a well known journalist, Elizabeth Hawley.

3.2 Source data is thoroughly explained (i.e. what was the original purpose of the data, when was it collected, how many variables did the original have, explain any peculiarities of the source data such as how missing values are recorded, etc).

3.3 Data importing and cleaning steps are explained in the text (tell me why you are doing the data cleaning activities that you perform) and follow a logical process.

```{r}
exped_tidy <- exped_tidy |> clean_names()
peaks_tidy <- peaks_tidy |> clean_names()
```

```{r}
summary(exped_tidy)
summary(peaks_tidy)
```

3.4 Once your data is clean, show what the final data set looks like. However, do not print more than 20 rows of your data to the screen; rather, show me the data in a condensed form (i.e. using enhanced print for tibbles, head/tail commands, etc).

3.5 Provide summary information about the variables of concern in your cleaned data set. provide me with a consolidated explanation, either with a table that provides summary info for each variable or a nicely written summary paragraph with inline code.

# Exploratory Data Analysis

```{r}

```

```{r}
annapuerna <- subset(exped_tidy,
                     select = c(peakid, totmembers, mdeaths, nohired),
                     mdeaths > 0 )

annapuerna <- annapuerna |> select (peakid, mdeaths, totmembers, nohired) |>  mutate(rate = mdeaths/totmembers)

ggplot(annapuerna, aes(x = peakid, y = rate, fill = nohired)) +
  geom_col()
```

Which mountain range (HIMAL_FACTOR) has the highest average peak height (HEIGHTM)?

```{r}
slice_max(subset(peaks_tidy, select = c(himal_factor, heightm)), order_by = heightm)
```

The mountain ranges that most people climbed

```{r}

ggplot(peaks_tidy, aes(x = himal_factor, fill = pstatus_factor)) +
  geom_bar(position = "dodge")+
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  labs(
    x = "Mountain range") +
  theme(legend.position = "top", legend) +
  scale_fill_discrete(labels = c("Climbed", "Unclimbed"),
                    name = "Climbing status")
```

## Route Analysis

```{r}

route_attempts <- exped_tidy |>
  summarise(
    route1_attempts = sum(!is.na(route1)),
    route2_attempts = sum(!is.na(route2)),
    route3_attempts = sum(!is.na(route3)),
    route4_attempts = sum(!is.na(route4))
  )

route_successes <- exped_tidy |>
  summarise(
    success1_successes = sum(success1, na.rm = TRUE),
    success2_successes = sum(success2, na.rm = TRUE),
    success3_successes = sum(success3, na.rm = TRUE),
    success4_successes = sum(success4, na.rm = TRUE)
  )

attempts <- as.numeric(route_attempts)
successes <- as.numeric(route_successes)


```

```{r}
route_analysis <- tibble(
  route = c("Route 1", "Route 2", "Route 3", "Route 4"),
  attempts = attempts,
  successes = successes
) |>
  mutate(success_rate = (successes / attempts) * 100)

print(route_analysis)
```

-   **Route Omission**

    -   Since there are zero attempts for both Route 3 and Route 4, we have ommitted these from the analysis because there is no activity. This shows that these are not viable routes for expedition.

```{r}
filtered_route_analysis <- route_analysis |>
  filter(attempts > 0)

# Attempts vs Success
p1 <- ggplot(filtered_route_analysis, aes(x = route)) +
  geom_bar(aes(y = attempts, fill = "Attempts"), stat = "identity", position = "dodge", width = 0.4) +
  geom_bar(aes(y = successes, fill = "Successes"), stat = "identity", position = "dodge", width = 0.4) +
  labs(
    title = "Attempts vs. Successes for Route 1 and Route 2",
    x = "Route",
    y = "Number of Expeditions",
    fill = "Legend"
  ) +
  theme_minimal()

# Success Rate
p2 <- ggplot(filtered_route_analysis, aes(x = reorder(route, -success_rate), y = success_rate, fill = route)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Success Rates by Climbing Route",
    x = "Route",
    y = "Success Rate (%)"
  ) +
  theme_minimal()

ggplotly(p1)
ggplotly(p2)
```

While the route success is a higher percentage for Route 2, there is not enough sample data to say that it is a safer route compared to Route 1. There are only 43 attempts on Route 2 whereas there are 862 attempts on Route 1. Therefore, Route 1 would be the safest option as it has been attempted much more than the other routes, and it has a 72% success rate.
